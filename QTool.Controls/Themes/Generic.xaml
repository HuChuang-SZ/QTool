<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:QTool.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/QTool.Controls;component/Themes/Color.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/QWindow.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/VideoPlayer.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/TabListBox.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/PopupButton.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/PopupControl.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/QNumber.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/QDateTimePicker.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/QShadeContentControl.xaml" />
        <ResourceDictionary Source="/QTool.Controls;component/Themes/QItemsControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Border x:Name="Root"
                Margin="5,0,0,0"
                Opacity="0"
                Padding="0,0,20,20"
                RenderTransformOrigin="0,0">
            <Border.RenderTransform>
                <TranslateTransform x:Name="xform"
                                    X="-25" />
            </Border.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2"
                                          To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="0"
                                                 Storyboard.TargetProperty="X"
                                                 Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="X"
                                             Storyboard.TargetName="xform" />
                            <DoubleAnimation Duration="0"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <FrameworkElement.Effect>
                <DropShadowEffect BlurRadius="11"
                                  ShadowDepth="6"
                                  Opacity="0.4" />
            </FrameworkElement.Effect>
            <Border Background="{StaticResource color-danger}"
                    BorderThickness="1"
                    BorderBrush="{StaticResource color-danger}">
                <TextBlock Foreground="{StaticResource color-white}"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding [0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type c:ValidationContent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ValidationContent}">
                    <Border BorderBrush="{StaticResource color-danger}"
                            BorderThickness="1"
                            x:Name="root">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="validationTooltip"
                                     Placement="Right"
                                     PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                     Template="{StaticResource ValidationToolTipTemplate}" />
                        </ToolTipService.ToolTip>
                        <Grid Background="Transparent"
                              HorizontalAlignment="Right"
                              Height="12"
                              Width="12"
                              Margin="1,-4,-4,0"
                              VerticalAlignment="Top">
                            <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                  Fill="{StaticResource color-danger}"
                                  Margin="1,3,0,0" />
                            <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                  Fill="{StaticResource color-white}"
                                  Margin="1,3,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type AdornedElementPlaceholder}}, Path= AdornedElement.IsKeyboardFocusWithin, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type AdornedElementPlaceholder}}, Path= AdornedElement.(Validation.HasError), Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="validationTooltip"
                                    Property="IsOpen"
                                    Value="True" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type AdornedElementPlaceholder}}, Path=AdornedElement.IsMouseOver, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type AdornedElementPlaceholder}}, Path=AdornedElement.(Validation.HasError), Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="validationTooltip"
                                    Property="IsOpen"
                                    Value="True" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:QImage}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:QImage}">
                    <Image Source="{TemplateBinding Source}"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                           Stretch="{TemplateBinding StretchInternal}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="LoadStatus"
                     Value="Pending">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:QImage}">
                            <TextBlock Text="加载中..."
                                       FontSize="8"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="LoadStatus"
                     Value="Failed">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:QImage}">
                            <Border Background="{StaticResource color-white}"
                                    BorderBrush="{StaticResource color-danger}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    ToolTip="{TemplateBinding ErrorMsg}">
                                <Image Margin="3"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       Source="JSON.GTA.Controls;component/Themes/Images/Error_24x24.png"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       MaxHeight="24"
                                       MaxWidth="24" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type c:SearchTextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="6" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{StaticResource ErrorTemplate}" />
        <Setter Property="Background"
                Value="{StaticResource color-white}" />
        <Setter Property="Foreground"
                Value="{StaticResource color-text-primary}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource border-color-base}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:SearchTextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ComboBox Grid.Column="0"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=SupportSearchMode,Converter={StaticResource BooleanToVisibilityConverter}}"
                                      BorderThickness="0,0,1,0"
                                      Padding="6,6,20,6"
                                      ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=SearchMode,Converter={StaticResource EnumToValuesConverter},Mode=OneTime}"
                                      SelectedItem="{Binding Path=SearchMode,Mode=TwoWay,RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                            <TextBlock x:Name="placeholder"
                                       Grid.Column="1"
                                       Visibility="Collapsed"
                                       Margin="{TemplateBinding Padding}"
                                       Text="{TemplateBinding Placeholder}"
                                       VerticalAlignment="Center"
                                       Foreground="{StaticResource color-text-placeholder}" />
                            <ScrollViewer Margin="0"
                                          Grid.Column="1"
                                          x:Name="PART_ContentHost" />

                            <TextBlock Grid.Column="2"
                                       VerticalAlignment="Center"
                                       Margin="5,0"
                                       Foreground="{StaticResource color-text-secondary}"
                                       FontFamily="{StaticResource QTool-IconFont}"
                                       Text="&#xe600;" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text"
                                 Value="">
                            <Setter TargetName="placeholder"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource color-primary}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource color-primary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
